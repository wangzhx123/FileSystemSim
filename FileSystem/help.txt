实验目的
理解和掌握文件系统的设计方法
实验要求
设计、实现一个模拟的文件系统
基本设计思想
数据存储：在内存中申请1M的空间来模拟存取设备，空间划分为三部分，第一部分用来存放位示图，用于标识数据块的使用情况，第二部分放置一个文件索引的数据，用于快速的查找数据，第三部分放置数据信息，第三部分划分为512块，每块512B，其256K，放置在1M空间的最末端，由第三部分的大小可知，第一部分只需64B即可，中间的部分用来存放文件索引。其他用到的存储单元由系统分配。
数据块在内存中的物理结构：文件块信息用链表来实现，其中一个节点包括文件块编号、文件块容量、文件块在1M空间中的地址和下一个文件块的地址。
文件索引结构：我们可以将文件索引看成是一张表，它包括文件索引在1M内存空间的位置、许可的最大长度、及当前的记录数，而每一行也是一个数据结构，包含一个唯一的索引编号、一个文件元素（包括文件或文件夹）的名称、一个文件元素的父元素（整个文件系统是一个树状结构）的名称、该元素所在物理位置的文件块编号（简单启见，规定了一个文件元素不可以超过一个文件块的大小，一个文件块只可以包含一个文件），该元素所在树状结构中的层，索引的有效性。

类 CFileSystem {超级块，i位图，b位图，i结点数组，b块数组}
类 CInode {i结点号，文件大小，文件存储块号}
类 CBlock { }

APIs:
1。namei(fs, path, dir_entry) // find the inode by pathname
2。mount() // iniciate the fs
3。unmount() // release the mem
4。new_inode()
5. free_inode()
-------------------------
6. dir_lookup()
-------------------------
7. write(fs, filp, buf, count, offset)
8. read(fs, filp, buf, count, offset)

